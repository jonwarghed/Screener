// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(["knockout", "jquery"], function(ko, $) {
    var WeatherViewModel;
    return WeatherViewModel = (function() {
      var weatherParams;

      weatherParams = {
        'q': 'Gothenburg,Sweden',
        'units': 'metric'
      };

      function WeatherViewModel() {
        this.updateCurrentWeather = __bind(this.updateCurrentWeather, this);
        this.iconTable = {
          '01d': 'wi-day-sunny',
          '02d': 'wi-day-cloudy',
          '03d': 'wi-cloudy',
          '04d': 'wi-cloudy-windy',
          '09d': 'wi-showers',
          '10d': 'wi-rain',
          '11d': 'wi-thunderstorm',
          '13d': 'wi-snow',
          '50d': 'wi-fog',
          '01n': 'wi-night-clear',
          '02n': 'wi-night-cloudy',
          '03n': 'wi-night-cloudy',
          '04n': 'wi-night-cloudy',
          '09n': 'wi-night-showers',
          '10n': 'wi-night-rain',
          '11n': 'wi-night-thunderstorm',
          '13n': 'wi-night-snow',
          '50n': 'wi-night-alt-cloudy-windy'
        };
        this.weatherData = ko.observable(null);
        this.sunrise = ko.computed((function(_this) {
          return function() {
            if (_this.weatherData() != null) {
              return new Date(_this.weatherData().sys.sunrise * 1000).toTimeString().substring(0, 5);
            }
          };
        })(this));
        this.sunset = ko.computed((function(_this) {
          return function() {
            if (_this.weatherData() != null) {
              return new Date(_this.weatherData().sys.sunset * 1000).toTimeString().substring(0, 5);
            }
          };
        })(this));
        this.wind = ko.computed((function(_this) {
          return function() {
            if (_this.weatherData() != null) {
              return Math.round(_this.weatherData().wind.speed);
            }
          };
        })(this));
        this.temperature = ko.computed((function(_this) {
          return function() {
            if (_this.weatherData() != null) {
              return Math.round(_this.weatherData().main.temp);
            }
          };
        })(this));
        this.weatherIcon = ko.computed((function(_this) {
          return function() {
            if (_this.weatherData() != null) {
              return _this.iconTable[_this.weatherData().weather[0].icon];
            }
          };
        })(this));
        this.isSunrise = ko.computed((function(_this) {
          return function() {
            var _ref;
            if (_this.weatherData() != null) {
              return (_this.weatherData().sys.sunrise * 1000 < (_ref = new Date) && _ref < _this.weatherData().sys.sunset * 1000);
            }
          };
        })(this));
        setInterval(this.updateCurrentWeather, 5000);
      }

      WeatherViewModel.prototype.updateCurrentWeather = function() {
        return $.getJSON('http://api.openweathermap.org/data/2.5/weather', weatherParams, this.weatherData);
      };

      return WeatherViewModel;

    })();
  });

}).call(this);

//# sourceMappingURL=weather.map
